---@diagnostic disable: undefined-global, undefined-field, deprecated

WhiteList = {284067266, 2958991826, 2637656194, 1179103962, 33901315, 101740507, 88364578, 639224736, 1679527327, 1253987799, 218371336, 54099434, 2441474267, 1033506005, 2392031867}
GuestList = {1743013672, 101953890}
BlackList = {}

local plr = game.Players.LocalPlayer

local Find = table.find(WhiteList, plr.UserId)
local Find1 = table.find(GuestList, plr.UserId)
local Block = table.find(BlackList, plr.UserId)


if Find or Find1 then

getgenv().AutoPunchingBag = false
getgenv().AutoPullups = false

--getgenv().SemiAutoRoadWork = false

getgenv().AutoClanReroll = false
--getgenv().AutoEat = false
getgenv().AutoEatXP = false

-- init
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/GreenDeno/Venyx-UI-Library/main/source.lua"))()
local venyx = library.new("D's World", 5013109572)

-- themes
local themes = {
Background = Color3.fromRGB(24, 24, 24),
Glow = Color3.fromRGB(0, 0, 0),
Accent = Color3.fromRGB(10, 10, 10),
LightContrast = Color3.fromRGB(20, 20, 20),
DarkContrast = Color3.fromRGB(14, 14, 14),  
TextColor = Color3.fromRGB(255, 255, 255)
}

-- first page
local page1 = venyx:addPage("Stat Farm", 5012544693)
local page2 = venyx:addPage("Misc", 5012544961)

local P1section1 = page1:addSection("Strength")
local P1section2 = page1:addSection("Durability")

--local P1section3 = page1:addSection("Speed")

local P2section1 = page2:addSection("Clan Reroll")
local P2section2 = page2:addSection("Auto Eat")


function TrainStrength()
    spawn(function()
        
        local plr = game.Players.LocalPlayer
        local character = plr.character
        local Humanoid = character:FindFirstChild("Humanoid")
        local HRP = character:FindFirstChild("HumanoidRootPart")
        local Glovess = false
        Bags = {}

        local PunchingBagFolder = game:GetService("Workspace")["Punching Bags"]

        local function Update()
            if getgenv().AutoPunchingBag == false then
                Glovess = false
            end
        end
         
        Update()
                    
        while getgenv().AutoPunchingBag == true do wait()
                Update()
        
                local Combats = plr.Backpack:FindFirstChild("Combat") or character:FindFirstChild("Combat")
                local GloveItem = character:FindFirstChild("Gloves") and character:FindFirstChild("RightGloves") and character:FindFirstChild("LeftGloves")

                for i, v in pairs(PunchingBagFolder:GetDescendants()) do 
                    if v.Name == "HumanoidRootPart" then
                        local distance = (HRP.Position - v.Position).magnitude
                        
                        if math.floor(distance) < 5 then
                            if #Bags == 0 then
                                table.insert(Bags, v)
                            end

                            if #Bags == 1 then
                                Combats.Parent = character
                                Humanoid:EquipTool(Combats)
                                Glovess = true
                                Combats.Equipped:Connect(function()
                                    while Glovess == true and getgenv().AutoPunchingBag == true do wait()
                                        if Glovess == false or getgenv().AutoPunchingBag == false then break end

                                        Combats:Activate()
                                    end
                                end)
                            end

                        elseif #Bags >= 1 and math.floor((HRP.Position - Bags[1].Position).magnitude) > 5 then
                            Glovess = false
                             table.clear(Bags)
                        end
                    end
                end

            end
--
    end)
end
-----------------------------------------------------------------------------------
function AutoDurability()
    spawn(function()

        local plr = game.Players.LocalPlayer
        local character = plr.character
        local Humanoid = character:FindFirstChild("Humanoid")
        local HRP = character:FindFirstChild("HumanoidRootPart")
--[[
        local function Update(XL)
            StaminaStat = plr.PlayerGui.MainGui.StatusFrame.Stamina.stat.Text

            StaminaStat:gsub('(.*)/(.*)', function(Current, Max)
                StaminaPercentage = math.floor((tonumber(Current)/tonumber(Max)) * 100)
            end)

            if StaminaPercentage > XL then
                Var1 = 1
                elseif StaminaPercentage <= XL then
                Var1 = 1.8

                elseif XL == nil then
                    Var1 = 1
            end
        end
--]]
        

        while getgenv().AutoPullups == true do
            TrainingStation = game:GetService("Workspace").TrainingStations
            InCombat = plr:FindFirstChild("InCombat")

            for i, v in pairs(TrainingStation:GetDescendants()) do
                if v.Name == "Main" and getgenv().AutoPullups == true then
                    local distance = (HRP.Position - v.Position).magnitude
                    if math.floor(distance) < 5 then
                        local Detector = v.Parent:FindFirstChild("ClickDetector")
                        if not InCombats then
                            fireclickdetector(Detector)
                            if character:FindFirstChild("Pullup") then
                                mouse1click() 
                            end
                        end
                    end
                end
            end
            wait(1.5)
        end
    end)
end
-----------------------------------------------------------------------------------
function TrainRoadwork(CD)
    spawn(function()
        local plr = game.Players.LocalPlayer
        local character = plr.character
        local Humanoid = character:FindFirstChild("Humanoid")
        local HRP = character:FindFirstChild("HumanoidRootPart")
        local Debounce = false
        
        local RoadWorkFolder = game:GetService("Workspace").Roadwork
        
        while getgenv().SemiAutoRoadWork == true do wait()
            Update()
             local RoadworkItem = plr.Backpack:FindFirstChild("Roadwork") or character:FindFirstChild("Roadwork")
    
                if Debounce == false and RoadworkItem then
                    Debounce = true
                   RoadworkItem.Parent = game.Players.LocalPlayer.Character
                   RoadworkItem.Equipped:Connect(function()
                         RoadworkItem:Activate()
                     end)
                    
                HRP.CFrame = RoadWorkFolder["1"].CFrame
                game.Players.LocalPlayer.Character.Humanoid.Jump = true
                wait(CD)
                HRP.CFrame = RoadWorkFolder["2"].CFrame
                game.Players.LocalPlayer.Character.Humanoid.Jump = true
                wait(CD)
                HRP.CFrame = RoadWorkFolder["3"].CFrame
                game.Players.LocalPlayer.Character.Humanoid.Jump = true
                wait(CD)
                HRP.CFrame = RoadWorkFolder["4"].CFrame
                game.Players.LocalPlayer.Character.Humanoid.Jump = true
                wait(CD)
                HRP.CFrame = RoadWorkFolder["5"].CFrame
                game.Players.LocalPlayer.Character.Humanoid.Jump = true
                wait(CD)
                HRP.CFrame = RoadWorkFolder["6"].CFrame
                game.Players.LocalPlayer.Character.Humanoid.Jump = true
                wait(CD)
                HRP.CFrame = RoadWorkFolder["7"].CFrame
                game.Players.LocalPlayer.Character.Humanoid.Jump = true
                wait(CD)
                HRP.CFrame = RoadWorkFolder["8"].CFrame
                game.Players.LocalPlayer.Character.Humanoid.Jump = true
                wait(CD)
                HRP.CFrame = CFrame.new(-1349.1582, 36.9611702, 754.310791, -0.999983788, -4.03832594e-08, 0.00569608901, -4.00918729e-08, 1, 5.12697227e-08, -0.00569608901, 5.10405229e-08, -0.999983788)
                Debounce = false
                else
                    HRP.CFrame = CFrame.new(-1349.1582, 36.9611702, 754.310791, -0.999983788, -4.03832594e-08, 0.00569608901, -4.00918729e-08, 1, 5.12697227e-08, -0.00569608901, 5.10405229e-08, -0.999983788)
                end
             end
    end)
end
-----------------------------------------------------------------------------------
function ClanReroll()
    spawn(function()

        while getgenv().AutoClanReroll == true do task.wait(0.125)
            
            local Name = game:GetService("Players").LocalPlayer.PlayerGui.MainGui.StatusFrame["Name/Clan"]
            local FoundName = Name.Text
            
            local ClanWanted = {"Hañma", "Songoku", "Kagutsuchi", "Sung", "Raijin", "Gyakusatsu", "Senkō", "Sanji", "Ryu", "Fujin"}
            
            FoundName:gsub('(.*) (.*)', function (First, Clan)
                Find = table.find(ClanWanted, Clan)
            end)
            
            if getgenv().AutoClanReroll == true then
                    
                local args = {[1] = "BP"}
                game:GetService("ReplicatedStorage").Reroll:FireServer(unpack(args))

                if Find then
                    getgenv().AutoClanReroll = false
                    plr:Kick("Rejoin, You got the clan you wanted")
                break
                end
            end
        end
    end)
end
-----------------------------------------------------------------------------------
function AutoEat(XX)
    spawn(function()
        
        local plr = game.Players.LocalPlayer
        local character = plr.character
        local Humanoid = character:FindFirstChild("Humanoid")
        local HRP = character:FindFirstChild("HumanoidRootPart")

        local Debounce = false

        local function Update()
            CheckForBurger = plr.Backpack:GetChildren() or character:GetChildren()

            HungerText = plr.PlayerGui.MainGui.StatusFrame.Hunger.stat
            Hungervalue = HungerText.Text 
            Hungervalue:gsub('(.*)/(.*)', function (Current, Max)
                HungerPercentage = math.floor((tonumber(Current)/ tonumber(Max)) * 100)
            end)
        end

        Update()

        while getgenv().AutoEatBurger == true do wait()
            Update()
            for i, v in pairs(CheckForBurger) do
                if v.Name == "Burger" then
                    if HungerPercentage < XX and not Debounce then
                        Debounce = true
                        Humanoid:EquipTool(v)
                        v:Activate()
                        wait(1.5)
                        Humanoid:UnequipTools()
                        Debounce = false
                    elseif XX == nil then
                        XX = 100
                    end
                end
            end
        end

    end)
end

function AutoEatChicken()
    spawn(function()
        local plr = game.Players.LocalPlayer
        local character = plr.character
        local Humanoid = character:FindFirstChild("Humanoid")
        local HRP = character:FindFirstChild("HumanoidRootPart")

        local Debounce = false

        local function Update()
            XPBoostCheck = plr:FindFirstChild("XPBoost") or plr:FindFirstChild("Eating")
            CheckForChicken = plr.Backpack:GetChildren() or character:GetChildren()
        end
    
        while getgenv().AutoEatXP == true do wait()
            Update()
            for i, v in pairs(CheckForChicken) do
                if v.Name == "Chicken" then 
                    Update()
                if not XPBoostCheck and not Debounce and getgenv().AutoEatXP == true then
                        Debounce = true
                        Humanoid:EquipTool(v)
                        v:Activate()
                        wait(1.5)
                        Humanoid:UnequipTools()
                        Debounce = false
                    end
                end
            end
        end
    end)
end
-----------------------------------------------------------------------------------
P1section1:addToggle("Auto Strength", nil, function(bool)
    getgenv().AutoPunchingBag = bool
    if bool then
        TrainStrength()
    end
end)

P1section2:addToggle("Auto Pullups", nil, function(bool)
    getgenv().AutoPullups = bool
    if bool then
        AutoDurability()
    end
end)

--[[
P1section2:addSlider("Slows down if stamina under a certain %", 0, 20, 100, function(value)
    AutoDurability(value)
end)
--]]

--[[
P1section3:addToggle("Auto Roadwork", nil, function(bool)
    getgenv().SemiAutoRoadWork = bool
    if bool then
        TrainRoadwork()
    end
end)

P1section3:addSlider("Speed at which you are teleported", 0, 0, 2, function(value)
    TrainRoadwork(value)
end)
--]]

P2section1:addToggle("Clan Reroll", nil, function(bool)
    getgenv().AutoClanReroll = bool
    if bool then
        ClanReroll()
    end
end)

--[[
P2section2:addSlider("Start eating if hunger bar is under certain %", 0, 20, 100, function(value)--Need fix
    AutoEat(value)
end)
--]]

--[[
P2section2:addToggle("Auto Eat(Burger)", nil, function(bool)
    getgenv().AutoEatBurger = bool
    if bool then
        AutoEat()
    end
end)
--]]

P2section2:addToggle("XP Boost(Chicken)", nil, function(bool)
    getgenv().AutoEatXP = bool
    if bool then
        AutoEatChicken()
    end
end)

-- second page
local theme = venyx:addPage("Theme", 5012544693)
local colors = theme:addSection("Colors")

for theme, color in pairs(themes) do -- all in one theme changer, i know, im cool
colors:addColorPicker(theme, color, function(color3)
venyx:setTheme(theme, color3)
end)
end

-- load
venyx:SelectPage(venyx.pages[1], true)

elseif Block then
    plr:Kick("You have been BlackListed")
    
    else
        plr:Kick("You have not been WhiteListed")
end
